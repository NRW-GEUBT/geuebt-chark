{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the documentation of Ge\u00fcbt-Charak","text":"<p>This is the characterisation module of NRW-GE\u00dcBT.</p> <p>User uploaded assemblies are processed with the Bakcharak pipeline:</p> <ul> <li>Serotyping</li> <li>Virulence factor predictions</li> <li>AMR predictions</li> </ul> <p>While this module can be used on its own, it is recommended to use the Ge\u00fcbt-core application instead.</p>"},{"location":"contributing/","title":"Contribution guide","text":"<p>Maintaining a repository is a lot of work and it is only possible with the input for its users. That's why we love to get your feedback and continuously improve! We want to contibuting to this project as easy and transparent as possible. That's why we ask all contributions to go through a GitHub workflow.</p>"},{"location":"contributing/#ask-a-question-report-a-bug-or-suggest-new-features","title":"Ask a question, report a bug, or suggest new features","text":"<p>Wether you wish to report a bug, discuss the current state of the code, how to use it, or propose new features, the GitHub repository is the place to start.</p> <p>Go to 'Issues' in the repository's menu and use the search bar to look for your issue/question, maybe the discussion already exists! if you don't find what you are looking for, use the green button 'New Issue' and select the correct template (Question, Bug report or New feature).</p>"},{"location":"contributing/#bug-reports","title":"Bug reports","text":"<p>Solving Bugs is not always easy and usually requires to be able to precisely understand what happened. Try to include the following in your report, so we can solve the problems quickly:</p> <ul> <li>A quick summary and/or background</li> <li>The software versions</li> <li>A precise description of the problem</li> <li>Join input data that reproduce the problem if possible</li> <li>Attach relevant log files to the issue</li> </ul>"},{"location":"contributing/#improving-the-documentation","title":"Improving the documentation","text":"<p>Writting a documentation is a big task and we are gratefull for any help to expand and improve it.</p> <p>If you find a specific section of the documentaiton unclear, or would like to see it in other languages, we would love to hear about it, or if you feel like it, try suggesting modifications.</p>"},{"location":"contributing/#writting-tests","title":"Writting tests","text":"<p>The critical parts of the workflow are currently verified by unit tests. These could always be improved and/or expanded. If you like to write tests, check the <code>.tests/unit</code> folder and suggest changes.</p>"},{"location":"contributing/#submitting-changes","title":"Submitting changes","text":"<p>All changes in the repository are made through pull requests.</p>"},{"location":"contributing/#github-worflow","title":"Github worflow","text":"<p>To submitt a pull request:</p> <ul> <li>Fork the repository and create your branch from <code>main</code></li> <li>Make your changes to the code base/documentation/tests</li> <li>If you have added code that shoul dbe testes, add tests</li> <li>If you have changed the parameters or formating of the inputs, update the documentation</li> <li>Ensure that your code passes the tests and lints, this will be automatically   tested when you submit your pull request</li> <li>Issue your pull request and wait for a maintainer to review the changes</li> </ul> <p>Please provide precise and sufficient information on the changes you performed when you submit your pull request.</p>"},{"location":"contributing/#tests","title":"Tests","text":"<p>It is a good idea to locally run tests before submitting your pull request.</p>"},{"location":"contributing/#unit-tests","title":"Unit tests","text":"<p>We use pytest for running unit tests. Make sure your current environment supports a recent version of python (3.9 or 3.10).</p> <pre><code>python -m pip install --upgrade pip\npip install pytest\npip install -r .tests/unit/requirements.txt  # Install tests dependencies\npytest .tests/unit\n</code></pre>"},{"location":"contributing/#integration-test","title":"Integration test","text":"<p>It is always a good idea to verify that the workflow runs properly as a whole. For this activate a conda enviroment with a recent version of snakemake (see the documentation) and run the following test:</p> <pre><code>snakemake --cores 1 --use-conda --configfile .tests/integration/config/config.yaml\n</code></pre>"},{"location":"contributing/#license","title":"License","text":"<p>By submitting changes to this repository, you agree that your contributions will be licensed under its BSD-3 Clauses License.</p>"},{"location":"dev_guide/","title":"Guide for developers","text":""},{"location":"user_guide/","title":"Guide for users","text":""},{"location":"user_guide/#installation","title":"Installation","text":""},{"location":"user_guide/#conda","title":"Conda","text":"<p>Install conda from any distribution, i.e. miniconda. You can follow the setup guide from the Bioconda team.</p> <p>We advise installing the mamaba solver in the base environement to speed up environments creation.</p> <pre><code>conda install mamba -n base -c conda-forge\n</code></pre>"},{"location":"user_guide/#run-environment","title":"Run environment","text":"<p>The running environement simply required a recent python version (&gt;= 3.9) and snakemake. If you followed the steps above just run:</p> <pre><code>mamba create -n snakemake snakemake\n</code></pre>"},{"location":"user_guide/#install-module-and-databases","title":"Install module and databases","text":"<p>Download the latest realease and unpack it.</p> <p>If you're feeling brave, clone the repository form Github:</p> <pre><code>git clone https://github.com/NRW-GEUBT/geuebt-charak\n</code></pre> <p>Most software and databases dependencies will be installed during the first run.</p>"},{"location":"user_guide/#configuration","title":"Configuration","text":"<p>The configuaration can be defined in two ways:</p> <ul> <li> <p>either edit and locally save the <code>config/config.yaml</code> files and provide its path   to the snakemake command with the <code>--configfile</code> argument</p> </li> <li> <p>or provide the parameters directly to the snakemake command with   <code>--config &lt;ARGNAME&gt;=&lt;VALUE&gt;</code></p> </li> </ul>"},{"location":"user_guide/#user-defined-parameters","title":"User defined parameters","text":"<p>Following arguments must be provided for each run:</p> Parameter Type Description <code>workdir</code> path-like string Path to the ouptut directory <code>sample_sheet</code> path-like string Path to the sample sheet in TSV format <code>species</code> string Species to analyze, can trigger additional species-specific results (\"Ecoli\", \"Campylobacter\", \"Salmonella\" or \"Listeria\")."},{"location":"user_guide/#optional-parameters","title":"Optional parameters","text":"<p>Following parameters are optional and will revert to defaults if not set:</p> Parameter Type Default Description <code>max_threads_per_job</code> integer 1 Max number of threads assigned to a single job <code>bakcharak_path</code> path-like string Default installation in <code>~/.nrw-geuebt/</code> Path to the Bakcharak pipeline folder"},{"location":"user_guide/#usage","title":"Usage","text":"<p>The workflow can be started with:</p> <pre><code>snakemake --use-conda --conda-prefix &lt;PATH TO CONDA ENVS&gt; --configfile &lt;PATH TO CONFIG&gt; --cores &lt;N&gt;\n</code></pre> <p>See the snakemake documentation for more information.</p>"},{"location":"user_guide/#input-formats","title":"Input formats","text":"<p>See the input formatting specifications in the <code>config</code> folder.</p>"},{"location":"user_guide/#sequence-files","title":"Sequence files","text":"<p>The assemblies must be provided as fasta file. Wrapped and unwrapped fastas as well as multifastas are allowed. There are no special requirements for sequence headers.</p>"},{"location":"user_guide/#results","title":"Results","text":"<p>Results to be used for the next steps are located in the <code>staging</code> folder in the workdir.</p>"},{"location":"user_guide/#isolate-datasheets","title":"Isolate datasheets","text":"<p>Isolate information are summarized in single JSON files Note that these are generated only for samples satisfying all filters. They follow the same structure, here for a single entry:</p> <pre><code>{\n    \"isolate_id\": \"16-LI00732-0\",\n    \"characterization\": {\n        \"amr\": {\n            \"count_amr_genes\": 2,\n            \"count_amr_genes_acquired\": 2,\n            \"count_amr_genes_pointmutations\": 0,\n            \"amr_genes\": \"fosX;vga(G)\",\n            \"count_amr_bymobility\": \"chromosome (2)\",\n            \"amrclassinfo\": {\n                \"count_amr_classes\": 2,\n                \"amr_classes\": \"FOSFOMYCIN;LINCOSAMIDE\",\n                \"count_amr_subclasses\": 2,\n                \"amr_subclasses\": \"FOSFOMYCIN;LINCOSAMIDE\"\n            },\n            \"amr_genes_byclass\": \"FOSFOMYCIN (fosX);LINCOSAMIDE (vga(G))\",\n            \"count_amr_genes_byclass\": \"FOSFOMYCIN (1);LINCOSAMIDE (1)\",\n            \"count_amr_genes_bysubclass\": \"FOSFOMYCIN (1);LINCOSAMIDE (1)\",\n            \"amr_genes_bysubclass\": \"FOSFOMYCIN (fosX);LINCOSAMIDE (vga(G))\",\n            \"count_amr_phenotypes\": 0,\n            \"amr_phenotypes\": \"\",\n            \"esbl_detected\": {\n                \"esbl_detected\": false\n            },\n            \"stress_genes\": {\n                \"METAL\": {\n                    \"genes\": {\n                        \"genes_by_type\": \"cadC\"\n                    },\n                    \"count\": {\n                        \"count\": 1\n                    }\n                }\n            },\n            \"count_stress_genes_bytype\": \"METAL (1)\",\n            \"stress_genes_bytype\": \"METAL (cadC)\"\n        },\n        \"virulence\": {\n            \"count_virulencefactors\": 35,\n            \"virulencefactors\": \"clpC;vip;inlF;pdgA;inlA;inlB;lntA;iap;inlC;fbpA;lspA;lpeA;bsh;hbp2;hbp1;prsA2;lapB;lap;oatA;inlK;inlJ;aut;clpE;lplA1;hpt;clpP;inlP;gtcA;ami;plcB;actA;mpl;hly;plcA;prfA\",\n            \"count_virulencefactors_byclass\": \"Adherence (7);Exoenzyme (1);Exotoxin (3);Immune_modulation (5);Invasion (6);Motility (1);Nutritional/Metabolic_factor (4);Post-translational_modification (3);Regulation (1);Stress_survival (4)\"\n        },\n        \"plasmids\": {\n            \"count_INC\": 1,\n            \"INC_types\": \"rep25_2_M640p00130(J1776plasmid)\",\n            \"cumulative_plasmid_length\": 25677,\n            \"plasmid_contigs\": 1,\n            \"circular_contigs\": 1,\n            \"replication_elements\": 1,\n            \"mobilization_elements\": 0,\n            \"conjugation_elements\": 0,\n            \"count_OriT\": 0,\n            \"plasmid_fasta\": \"NA\"\n        },\n        \"reference_information\": {\n            \"reference_species\": \"Listeria monocytogenes\",\n            \"reference_genus\": \"Listeria\",\n            \"reference_identity\": 0.985,\n            \"reference_accession\": \"GCF_001565515.1\",\n            \"reference_genome\": \" Listeria monocytogenes strain LM09-00521 genome assembly\"\n        },\n        \"Listeria\": {\n            \"serotype\": \"1/2c, 3c\",\n            \"PRS\": \"FULL\",\n            \"LMO0737\": \"FULL\",\n            \"LMO1118\": \"FULL\",\n            \"ORF2110\": \"NONE\",\n            \"ORF2819\": \"NONE\",\n            \"comment\": \"NA\"\n        }\n    }\n}\n</code></pre> <p>Note that some fields are species-dependent</p>"},{"location":"about/changelog/","title":"Release notes","text":""},{"location":"about/changelog/#020","title":"0.2.0","text":"<p>Update Bakcharak to Version 3.1.2 Considerably improved deployment through Bakcharak update</p>"},{"location":"about/changelog/#012","title":"0.1.2","text":"<ul> <li>fix post deploy environment (for real now?)</li> </ul>"},{"location":"about/changelog/#011","title":"0.1.1","text":"<ul> <li>fix post deploy environment</li> </ul>"},{"location":"about/license/","title":"License","text":"<p>Copyright 2023, Gr\u00e9goire Denay.</p> <p>Redistribution and use in source and binary forms, with or without  modification, are permitted provided that the following conditions are met:</p> <ol> <li> <p>Redistributions of source code must retain the above copyright notice, this  list of conditions and the following disclaimer.</p> </li> <li> <p>Redistributions in binary form must reproduce the above copyright notice,  this list of conditions and the following disclaimer in the documentation  and/or other materials provided with the distribution.</p> </li> <li> <p>Neither the name of the copyright holder nor the names of its contributors  may be used to endorse or promote products derived from this software without  specific prior written permission.</p> </li> </ol> <p>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p>"}]}